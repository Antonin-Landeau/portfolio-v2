import { GetStaticPaths, GetStaticProps } from "next";
import Image from "next/image";
import React, { ReactNode } from "react";
import { sanityClient, urlFor } from "../../sanity";
import { MainImage, Project, Slug } from "../../types/types";
import path from "path";
import { AnimatePresence } from "framer-motion";
import Head from "next/head";
import Github from "../../components/Icons/Github";
import Link from "next/link";
import LinkIcon from "../../components/Icons/Link";
import {
 PortableText,
 PortableTextComponent,
 PortableTextProps,
 PortableTextReactComponents,
} from "@portabletext/react";

interface props {
 project: Project;
}

const PortableImage = ({ value }: { value: MainImage }) => {
 console.log(value);
 return <img src={urlFor(value).url()} />;
};

const components: Partial<PortableTextReactComponents> = {
 types: {
  image: PortableImage,
 },
 block: {
  normal: ({ children }) => <p className="py-1 indent-3">{children}</p>,
  h1: ({ children }) => (
   <h1 className="text-primary-orange text-5xl uppercase font-bold indent-7 py-3">
    {children}
   </h1>
  ),
  h2: ({ children }) => (
   <h2 className="text-secondary-font text-2xl uppercase font-bold indent-10 py-2">
    {children}
   </h2>
  ),
 },
 list: {
  bullet: ({ children }) => <ul className="ml-10 py-2">{children}</ul>,
 },
 listItem: {
  bullet: ({ children }) => <li className="list-disc">{children}</li>,
 },
};

const Project = ({ project }: props) => {
 console.log(project);
 return (
  <div>
   <AnimatePresence>
    <Head>
     <title>{project?.title}</title>
     <meta name="description" content="Generated by create next app" />
     <link rel="icon" href="/favicon.png" />
    </Head>
    <main className="" key="animation">
     <section>
      <h1>{project?.title}</h1>
      <p>{project?.description}</p>
     </section>
     <section>
      <iframe
       width="560"
       height="315"
       src={`https://www.youtube.com/embed/${project.video}`}
       title="YouTube video player"
       allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
      ></iframe>
     </section>
     <section>
      <div>
       {project.githubRepository && (
        <div className="flex items-center gap-2">
         <Github className="w-5 h-5" />
         <Link href={project.githubRepository} legacyBehavior>
          <a
           target="_blank"
           className="hover:text-primary-orange hover:underline"
          >
           Github
          </a>
         </Link>
        </div>
       )}
      </div>
      {project.url && (
       <div className="flex items-center gap-2">
        <LinkIcon className="w-5 h-5 text-primary-orange" />
        <Link href={project.url} legacyBehavior>
         <a
          target="_blank"
          className="hover:text-primary-orange hover:underline"
         >
          {project.url}
         </a>
        </Link>
       </div>
      )}
     </section>
     <section>
      <div className="flex mt-4 gap-3 flex-wrap">
       {project.technologies &&
        project.technologies.map((techno, index) => {
         return (
          <img
           key={index}
           className="h-6"
           src={urlFor(techno.descriptionIcon).url()}
           alt=""
          />
         );
        })}
      </div>
     </section>
     {project.body && (
      <section className="p-5">
       <PortableText value={project.body} components={components} />
      </section>
     )}
    </main>
   </AnimatePresence>
  </div>
 );
};

export const getStaticPaths = async () => {
 const query = `*[_type == "project"]{
   "slug": slug.current
  }`;

 const projects = await sanityClient.fetch(query);

 const paths = projects.map((path: any) => {
  console.log(path);
  return {
   params: { slug: path.slug },
  };
 });

 console.log("paths --------------------------", paths);
 return {
  paths,
  fallback: false,
 };
};

export const getStaticProps: GetStaticProps = async (context) => {
 const slug = context.params?.slug;
 console.log("test");

 const query = `*[_type == 'project' && slug.current =="${slug}"][0]{
  ...,
  "technologies": technologies[]->{title,descriptionIcon },
 }`;
 const project = await sanityClient.fetch(query);

 return {
  props: {
   project: project,
  },
 };
};

export default Project;
